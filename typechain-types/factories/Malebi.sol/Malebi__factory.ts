/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Malebi, MalebiInterface } from "../../Malebi.sol/Malebi";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_honey",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpConduit",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wbera",
        type: "address",
      },
      {
        internalType: "address",
        name: "_BexMultiSwap",
        type: "address",
      },
      {
        internalType: "address",
        name: "_CrocSwapDex",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bgt",
        type: "address",
      },
      {
        internalType: "address",
        name: "_HenloRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AREB",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ArebContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BGT",
    outputs: [
      {
        internalType: "contract IBGT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BexMultiSwap",
    outputs: [
      {
        internalType: "contract IBeraCrocMultiSwap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CrocSwapDex",
    outputs: [
      {
        internalType: "contract ICrocSwapDex",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HenloDexRouter",
    outputs: [
      {
        internalType: "contract IHenloDexRouterV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Honey",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Honey_USDC_BEX_LP",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "StakingVault",
    outputs: [
      {
        internalType: "contract IStakingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBERA",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addLiquidityAndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimBGT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimBgtAndBuyBack",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "target",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "bgtYieldFromVault",
        type: "uint256",
      },
    ],
    name: "convertBGT2Bera",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_areb",
        type: "address",
      },
    ],
    name: "defineAreb",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bgtYieldFromVault",
        type: "uint256",
      },
    ],
    name: "swapBeraForAreb",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withDrawHoney",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002a3c38038062002a3c833981810160405281019062000037919062000339565b886000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050505050505062000418565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030182620002d4565b9050919050565b6200031381620002f4565b81146200031f57600080fd5b50565b600081519050620003338162000308565b92915050565b60008060008060008060008060006101208a8c0312156200035f576200035e620002cf565b5b60006200036f8c828d0162000322565b9950506020620003828c828d0162000322565b9850506040620003958c828d0162000322565b9750506060620003a88c828d0162000322565b9650506080620003bb8c828d0162000322565b95505060a0620003ce8c828d0162000322565b94505060c0620003e18c828d0162000322565b93505060e0620003f48c828d0162000322565b925050610100620004088c828d0162000322565b9150509295985092959850929598565b61261480620004286000396000f3fe6080604052600436106101235760003560e01c806362c815a4116100a0578063969d3a3d11610064578063969d3a3d1461037b578063a0417bad146103a6578063b4aedbc0146103d1578063c056ff76146103fc578063d4551e07146104275761012a565b806362c815a4146102a4578063890eba68146102cf57806389a30271146102fa5780638da5cb5b14610325578063905d9075146103505761012a565b80632b9a9833116100e75780632b9a9833146101d157806333a1e867146101fa578063382cf229146102255780633ed9c399146102625780634d4ea478146102795761012a565b80630adcc12a1461012f5780630f5ce2231461015a57806312842bb014610185578063247cca351461019c57806329cb99ba146101a65761012a565b3661012a57005b600080fd5b34801561013b57600080fd5b50610144610450565b60405161015191906117a9565b60405180910390f35b34801561016657600080fd5b5061016f610476565b60405161017c9190611823565b60405180910390f35b34801561019157600080fd5b5061019a61049c565b005b6101a4610500565b005b3480156101b257600080fd5b506101bb61063b565b6040516101c8919061185f565b60405180910390f35b3480156101dd57600080fd5b506101f860048036038101906101f391906118ba565b610661565b005b34801561020657600080fd5b5061020f610782565b60405161021c9190611908565b60405180910390f35b34801561023157600080fd5b5061024c60048036038101906102479190611959565b6107a8565b6040516102599190611a44565b60405180910390f35b34801561026e57600080fd5b50610277610b06565b005b34801561028557600080fd5b5061028e610c47565b60405161029b9190611a87565b60405180910390f35b3480156102b057600080fd5b506102b9610c6b565b6040516102c69190611ab1565b60405180910390f35b3480156102db57600080fd5b506102e4610d15565b6040516102f19190611ab1565b60405180910390f35b34801561030657600080fd5b5061030f610d1b565b60405161031c9190611a87565b60405180910390f35b34801561033157600080fd5b5061033a610d41565b60405161034791906117a9565b60405180910390f35b34801561035c57600080fd5b50610365610d67565b6040516103729190611aed565b60405180910390f35b34801561038757600080fd5b50610390610d8d565b60405161039d9190611a87565b60405180910390f35b3480156103b257600080fd5b506103bb610db3565b6040516103c89190611a87565b60405180910390f35b3480156103dd57600080fd5b506103e6610dd9565b6040516103f39190611b29565b60405180910390f35b34801561040857600080fd5b50610411610dff565b60405161041e9190611a87565b60405180910390f35b34801561043357600080fd5b5061044e60048036038101906104499190611b44565b610e25565b005b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146104f657600080fd5b6104fe610eb8565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c00007b0306040518263ffffffff1660e01b815260040161055d91906117a9565b6020604051808303816000875af115801561057c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a09190611b99565b905080600c81905550600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e9a695030836040518363ffffffff1660e01b8152600401610606929190611bc6565b600060405180830381600087803b15801561062057600080fd5b505af1158015610634573d6000803e3d6000fd5b5050505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146106bb57600080fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6060600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610829929190611bc6565b6020604051808303816000875af1158015610848573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086c9190611c27565b506000600367ffffffffffffffff81111561088a57610889611c54565b5b6040519080825280602002602001820160405280156108b85781602001602082028036833780820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816000815181106108f2576108f1611c83565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061096157610960611c83565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106109d2576109d1611c83565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab5856000853061025842610a5f9190611ce1565b6040518663ffffffff1660e01b8152600401610a7e9493929190611e0e565b60006040518083038185885af1158015610a9c573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f82011682018060405250810190610ac69190611f84565b905060008160018351610ad99190611fcd565b81518110610aea57610ae9611c83565b5b6020026020010151905080600c81905550819350505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610b6291906117a9565b602060405180830381865afa158015610b7f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ba39190611b99565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610c00929190611bc6565b6020604051808303816000875af1158015610c1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c439190611c27565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c00007b0306040518263ffffffff1660e01b8152600401610cc991906117a9565b6020604051808303816000875af1158015610ce8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d0c9190611b99565b90508091505090565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e9a695083836040518363ffffffff1660e01b8152600401610e82929190611bc6565b600060405180830381600087803b158015610e9c57600080fd5b505af1158015610eb0573d6000803e3d6000fd5b505050505050565b60006040518060800160405280618ca0815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525090506000600167ffffffffffffffff811115610f6d57610f6c611c54565b5b604051908082528060200260200182016040528015610fa657816020015b610f93611712565b815260200190600190039081610f8b5790505b5090508181600081518110610fbe57610fbd611c83565b5b602002602001018190525060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b815260040161102591906117a9565b602060405180830381865afa158015611042573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110669190611b99565b905060006002826110779190612030565b9050600081905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016110fb929190611bc6565b6020604051808303816000875af115801561111a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113e9190611c27565b506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630b2f6f3f868460006040518463ffffffff1660e01b81526004016111a1939291906121d0565b6020604051808303816000875af11580156111c0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111e4919061223a565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002866112529190612267565b6040518363ffffffff1660e01b815260040161126f929190611bc6565b6020604051808303816000875af115801561128e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112b29190611c27565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028461132191906122a9565b6040518363ffffffff1660e01b815260040161133e929190612317565b6020604051808303816000875af115801561135d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113819190611c27565b5061138b81611584565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113e891906117a9565b602060405180830381865afa158015611405573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114299190611b99565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b81526004016114aa929190611bc6565b6020604051808303816000875af11580156114c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114ed9190611c27565b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a694fc3a826040518263ffffffff1660e01b81526004016115499190611ab1565b600060405180830381600087803b15801561156357600080fd5b505af1158015611577573d6000803e3d6000fd5b5050505050505050505050565b60006020905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000618ca0905060008060008790506000806fffffffffffffffffffffffffffffffff9050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008b8b8b8b8b8b8b8b8b8b8b60405160200161164b9b9a99989796959493929190612378565b6040516020818303038152906040529050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a15112f96080836040518363ffffffff1660e01b81526004016116ba9291906124bf565b6000604051808303816000875af11580156116d9573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906117029190612595565b5050505050505050505050505050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061179382611768565b9050919050565b6117a381611788565b82525050565b60006020820190506117be600083018461179a565b92915050565b6000819050919050565b60006117e96117e46117df84611768565b6117c4565b611768565b9050919050565b60006117fb826117ce565b9050919050565b600061180d826117f0565b9050919050565b61181d81611802565b82525050565b60006020820190506118386000830184611814565b92915050565b6000611849826117f0565b9050919050565b6118598161183e565b82525050565b60006020820190506118746000830184611850565b92915050565b6000604051905090565b600080fd5b600080fd5b61189781611788565b81146118a257600080fd5b50565b6000813590506118b48161188e565b92915050565b6000602082840312156118d0576118cf611884565b5b60006118de848285016118a5565b91505092915050565b60006118f2826117f0565b9050919050565b611902816118e7565b82525050565b600060208201905061191d60008301846118f9565b92915050565b6000819050919050565b61193681611923565b811461194157600080fd5b50565b6000813590506119538161192d565b92915050565b60006020828403121561196f5761196e611884565b5b600061197d84828501611944565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6119bb81611923565b82525050565b60006119cd83836119b2565b60208301905092915050565b6000602082019050919050565b60006119f182611986565b6119fb8185611991565b9350611a06836119a2565b8060005b83811015611a37578151611a1e88826119c1565b9750611a29836119d9565b925050600181019050611a0a565b5085935050505092915050565b60006020820190508181036000830152611a5e81846119e6565b905092915050565b6000611a71826117f0565b9050919050565b611a8181611a66565b82525050565b6000602082019050611a9c6000830184611a78565b92915050565b611aab81611923565b82525050565b6000602082019050611ac66000830184611aa2565b92915050565b6000611ad7826117f0565b9050919050565b611ae781611acc565b82525050565b6000602082019050611b026000830184611ade565b92915050565b6000611b13826117f0565b9050919050565b611b2381611b08565b82525050565b6000602082019050611b3e6000830184611b1a565b92915050565b60008060408385031215611b5b57611b5a611884565b5b6000611b69858286016118a5565b9250506020611b7a85828601611944565b9150509250929050565b600081519050611b938161192d565b92915050565b600060208284031215611baf57611bae611884565b5b6000611bbd84828501611b84565b91505092915050565b6000604082019050611bdb600083018561179a565b611be86020830184611aa2565b9392505050565b60008115159050919050565b611c0481611bef565b8114611c0f57600080fd5b50565b600081519050611c2181611bfb565b92915050565b600060208284031215611c3d57611c3c611884565b5b6000611c4b84828501611c12565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611cec82611923565b9150611cf783611923565b9250828201905080821115611d0f57611d0e611cb2565b5b92915050565b6000819050919050565b6000611d3a611d35611d3084611d15565b6117c4565b611923565b9050919050565b611d4a81611d1f565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611d8581611788565b82525050565b6000611d978383611d7c565b60208301905092915050565b6000602082019050919050565b6000611dbb82611d50565b611dc58185611d5b565b9350611dd083611d6c565b8060005b83811015611e01578151611de88882611d8b565b9750611df383611da3565b925050600181019050611dd4565b5085935050505092915050565b6000608082019050611e236000830187611d41565b8181036020830152611e358186611db0565b9050611e44604083018561179a565b611e516060830184611aa2565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b611e7982611e5f565b810181811067ffffffffffffffff82111715611e9857611e97611c54565b5b80604052505050565b6000611eab61187a565b9050611eb78282611e70565b919050565b600067ffffffffffffffff821115611ed757611ed6611c54565b5b602082029050602081019050919050565b600080fd5b6000611f00611efb84611ebc565b611ea1565b90508083825260208201905060208402830185811115611f2357611f22611ee8565b5b835b81811015611f4c5780611f388882611b84565b845260208401935050602081019050611f25565b5050509392505050565b600082601f830112611f6b57611f6a611e5a565b5b8151611f7b848260208601611eed565b91505092915050565b600060208284031215611f9a57611f99611884565b5b600082015167ffffffffffffffff811115611fb857611fb7611889565b5b611fc484828501611f56565b91505092915050565b6000611fd882611923565b9150611fe383611923565b9250828203905081811115611ffb57611ffa611cb2565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061203b82611923565b915061204683611923565b92508261205657612055612001565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61209681611bef565b82525050565b6080820160008201516120b260008501826119b2565b5060208201516120c56020850182611d7c565b5060408201516120d86040850182611d7c565b5060608201516120eb606085018261208d565b50505050565b60006120fd838361209c565b60808301905092915050565b6000602082019050919050565b600061212182612061565b61212b818561206c565b93506121368361207d565b8060005b8381101561216757815161214e88826120f1565b975061215983612109565b92505060018101905061213a565b5085935050505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b61219981612174565b82525050565b60006121ba6121b56121b084611d15565b6117c4565b612174565b9050919050565b6121ca8161219f565b82525050565b600060608201905081810360008301526121ea8186612116565b90506121f96020830185612190565b61220660408301846121c1565b949350505050565b61221781612174565b811461222257600080fd5b50565b6000815190506122348161220e565b92915050565b6000602082840312156122505761224f611884565b5b600061225e84828501612225565b91505092915050565b600061227282611923565b915061227d83611923565b925082820261228b81611923565b915082820484148315176122a2576122a1611cb2565b5b5092915050565b60006122b482612174565b91506122bf83612174565b92508282026122cd81612174565b91508082146122df576122de611cb2565b5b5092915050565b60006123016122fc6122f784612174565b6117c4565b611923565b9050919050565b612311816122e6565b82525050565b600060408201905061232c600083018561179a565b6123396020830184612308565b9392505050565b600060ff82169050919050565b61235681612340565b82525050565b60008160020b9050919050565b6123728161235c565b82525050565b60006101608201905061238e600083018e61234d565b61239b602083018d61179a565b6123a8604083018c61179a565b6123b5606083018b611aa2565b6123c2608083018a612369565b6123cf60a0830189612369565b6123dc60c0830188612190565b6123e960e0830187612190565b6123f7610100830186612190565b61240561012083018561234d565b61241361014083018461179a565b9c9b505050505050505050505050565b600061ffff82169050919050565b61243a81612423565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561247a57808201518184015260208101905061245f565b60008484015250505050565b600061249182612440565b61249b818561244b565b93506124ab81856020860161245c565b6124b481611e5f565b840191505092915050565b60006040820190506124d46000830185612431565b81810360208301526124e68184612486565b90509392505050565b600080fd5b600067ffffffffffffffff82111561250f5761250e611c54565b5b61251882611e5f565b9050602081019050919050565b6000612538612533846124f4565b611ea1565b905082815260208101848484011115612554576125536124ef565b5b61255f84828561245c565b509392505050565b600082601f83011261257c5761257b611e5a565b5b815161258c848260208601612525565b91505092915050565b6000602082840312156125ab576125aa611884565b5b600082015167ffffffffffffffff8111156125c9576125c8611889565b5b6125d584828501612567565b9150509291505056fea26469706673582212203c417409c302ad90c4070862c4f3505adf7395f9c70ca208009886037378486e64736f6c63430008110033";

type MalebiConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MalebiConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Malebi__factory extends ContractFactory {
  constructor(...args: MalebiConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _honey: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _lpConduit: PromiseOrValue<string>,
    _wbera: PromiseOrValue<string>,
    _BexMultiSwap: PromiseOrValue<string>,
    _CrocSwapDex: PromiseOrValue<string>,
    _stakingVault: PromiseOrValue<string>,
    _bgt: PromiseOrValue<string>,
    _HenloRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Malebi> {
    return super.deploy(
      _honey,
      _usdc,
      _lpConduit,
      _wbera,
      _BexMultiSwap,
      _CrocSwapDex,
      _stakingVault,
      _bgt,
      _HenloRouter,
      overrides || {}
    ) as Promise<Malebi>;
  }
  override getDeployTransaction(
    _honey: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _lpConduit: PromiseOrValue<string>,
    _wbera: PromiseOrValue<string>,
    _BexMultiSwap: PromiseOrValue<string>,
    _CrocSwapDex: PromiseOrValue<string>,
    _stakingVault: PromiseOrValue<string>,
    _bgt: PromiseOrValue<string>,
    _HenloRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _honey,
      _usdc,
      _lpConduit,
      _wbera,
      _BexMultiSwap,
      _CrocSwapDex,
      _stakingVault,
      _bgt,
      _HenloRouter,
      overrides || {}
    );
  }
  override attach(address: string): Malebi {
    return super.attach(address) as Malebi;
  }
  override connect(signer: Signer): Malebi__factory {
    return super.connect(signer) as Malebi__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MalebiInterface {
    return new utils.Interface(_abi) as MalebiInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Malebi {
    return new Contract(address, _abi, signerOrProvider) as Malebi;
  }
}
