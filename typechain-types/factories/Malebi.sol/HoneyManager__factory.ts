/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HoneyManager,
  HoneyManagerInterface,
} from "../../Malebi.sol/HoneyManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_honey",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpConduit",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wbera",
        type: "address",
      },
      {
        internalType: "address",
        name: "_BexMultiSwap",
        type: "address",
      },
      {
        internalType: "address",
        name: "_CrocSwapDex",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bgt",
        type: "address",
      },
      {
        internalType: "address",
        name: "_HenloRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AREB",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ArebContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BGT",
    outputs: [
      {
        internalType: "contract IBGT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BexMultiSwap",
    outputs: [
      {
        internalType: "contract IBeraCrocMultiSwap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CrocSwapDex",
    outputs: [
      {
        internalType: "contract ICrocSwapDex",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HenloDexRouter",
    outputs: [
      {
        internalType: "contract IHenloDexRouterV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Honey",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Honey_USDC_BEX_LP",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "StakingVault",
    outputs: [
      {
        internalType: "contract IStakingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBERA",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addLiquidityAndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimBGT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimBgtAndBuyBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bgtYieldFromVault",
        type: "uint256",
      },
    ],
    name: "convertBGT2Bera",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_areb",
        type: "address",
      },
    ],
    name: "defineAreb",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bgtYieldFromVault",
        type: "uint256",
      },
    ],
    name: "swapBeraForAreb",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "withDrawHoney",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040526064600c553480156200001657600080fd5b50604051620028093803806200280983398181016040528101906200003c91906200033e565b886000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050506200041d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030682620002d9565b9050919050565b6200031881620002f9565b81146200032457600080fd5b50565b60008151905062000338816200030d565b92915050565b60008060008060008060008060006101208a8c031215620003645762000363620002d4565b5b6000620003748c828d0162000327565b9950506020620003878c828d0162000327565b98505060406200039a8c828d0162000327565b9750506060620003ad8c828d0162000327565b9650506080620003c08c828d0162000327565b95505060a0620003d38c828d0162000327565b94505060c0620003e68c828d0162000327565b93505060e0620003f98c828d0162000327565b9250506101006200040d8c828d0162000327565b9150509295985092959850929598565b6123dc806200042d6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c806362c815a4116100ad578063969d3a3d11610071578063969d3a3d146102b3578063a0417bad146102d1578063b4aedbc0146102ef578063b787ed621461030d578063c056ff76146103295761012c565b806362c815a41461021d578063890eba681461023b57806389a30271146102595780638da5cb5b14610277578063905d9075146102955761012c565b80632b9a9833116100f45780632b9a98331461019f57806333a1e867146101bb578063382cf229146101d95780633ed9c399146101f55780634d4ea478146101ff5761012c565b80630adcc12a146101315780630f5ce2231461014f57806312842bb01461016d578063247cca351461017757806329cb99ba14610181575b600080fd5b610139610347565b6040516101469190611682565b60405180910390f35b61015761036d565b60405161016491906116fc565b60405180910390f35b610175610393565b005b61017f6103f7565b005b6101896104a3565b6040516101969190611738565b60405180910390f35b6101b960048036038101906101b49190611793565b6104c9565b005b6101c36105ea565b6040516101d091906117e1565b60405180910390f35b6101f360048036038101906101ee9190611832565b610610565b005b6101fd6109e0565b005b610207610b21565b6040516102149190611880565b60405180910390f35b610225610b45565b60405161023291906118aa565b60405180910390f35b610243610bef565b60405161025091906118aa565b60405180910390f35b610261610bf5565b60405161026e9190611880565b60405180910390f35b61027f610c1b565b60405161028c9190611682565b60405180910390f35b61029d610c41565b6040516102aa91906118e6565b60405180910390f35b6102bb610c67565b6040516102c89190611880565b60405180910390f35b6102d9610c8d565b6040516102e69190611880565b60405180910390f35b6102f7610cb3565b6040516103049190611922565b60405180910390f35b61032760048036038101906103229190611832565b610cd9565b005b610331610d6b565b60405161033e9190611880565b60405180910390f35b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103ed57600080fd5b6103f5610d91565b565b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c00007b0306040518263ffffffff1660e01b81526004016104549190611682565b6020604051808303816000875af1158015610473573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104979190611952565b905080600c8190555050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461052357600080fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161068f92919061197f565b6020604051808303816000875af11580156106ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106d291906119e0565b506000600367ffffffffffffffff8111156106f0576106ef611a0d565b5b60405190808252806020026020018201604052801561071e5781602001602082028036833780820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160008151811061075857610757611a3c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816001815181106107c7576107c6611a3c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050308160028151811061081657610815611a3c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab58460008530610258426108a39190611a9a565b6040518663ffffffff1660e01b81526004016108c29493929190611bc7565b60006040518083038185885af11580156108e0573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f8201168201806040525081019061090a9190611d3d565b90506000816001835161091d9190611d86565b8151811061092e5761092d611a3c565b5b60200260200101519050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6000836040518363ffffffff1660e01b815260040161099692919061197f565b6020604051808303816000875af11580156109b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109d991906119e0565b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a3c9190611682565b602060405180830381865afa158015610a59573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a7d9190611952565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ada92919061197f565b6020604051808303816000875af1158015610af9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b1d91906119e0565b5050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c00007b0306040518263ffffffff1660e01b8152600401610ba39190611682565b6020604051808303816000875af1158015610bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be69190611952565b90508091505090565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e9a695030836040518363ffffffff1660e01b8152600401610d3692919061197f565b600060405180830381600087803b158015610d5057600080fd5b505af1158015610d64573d6000803e3d6000fd5b5050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006040518060800160405280618ca0815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525090506000600167ffffffffffffffff811115610e4657610e45611a0d565b5b604051908082528060200260200182016040528015610e7f57816020015b610e6c6115eb565b815260200190600190039081610e645790505b5090508181600081518110610e9757610e96611a3c565b5b602002602001018190525060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610efe9190611682565b602060405180830381865afa158015610f1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f3f9190611952565b90506000600282610f509190611de9565b9050600081905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b8152600401610fd492919061197f565b6020604051808303816000875af1158015610ff3573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061101791906119e0565b506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630b2f6f3f868460006040518463ffffffff1660e01b815260040161107a93929190611f98565b6020604051808303816000875af1158015611099573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110bd9190612002565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660028661112b919061202f565b6040518363ffffffff1660e01b815260040161114892919061197f565b6020604051808303816000875af1158015611167573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061118b91906119e0565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002846111fa9190612071565b6040518363ffffffff1660e01b81526004016112179291906120df565b6020604051808303816000875af1158015611236573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061125a91906119e0565b506112648161145d565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016112c19190611682565b602060405180830381865afa1580156112de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113029190611952565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b815260040161138392919061197f565b6020604051808303816000875af11580156113a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906113c691906119e0565b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a694fc3a826040518263ffffffff1660e01b815260040161142291906118aa565b600060405180830381600087803b15801561143c57600080fd5b505af1158015611450573d6000803e3d6000fd5b5050505050505050505050565b60006020905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000618ca0905060008060008790506000806fffffffffffffffffffffffffffffffff9050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008b8b8b8b8b8b8b8b8b8b8b6040516020016115249b9a99989796959493929190612140565b6040516020818303038152906040529050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a15112f96080836040518363ffffffff1660e01b8152600401611593929190612287565b6000604051808303816000875af11580156115b2573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f820116820180604052508101906115db919061235d565b5050505050505050505050505050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061166c82611641565b9050919050565b61167c81611661565b82525050565b60006020820190506116976000830184611673565b92915050565b6000819050919050565b60006116c26116bd6116b884611641565b61169d565b611641565b9050919050565b60006116d4826116a7565b9050919050565b60006116e6826116c9565b9050919050565b6116f6816116db565b82525050565b600060208201905061171160008301846116ed565b92915050565b6000611722826116c9565b9050919050565b61173281611717565b82525050565b600060208201905061174d6000830184611729565b92915050565b6000604051905090565b600080fd5b600080fd5b61177081611661565b811461177b57600080fd5b50565b60008135905061178d81611767565b92915050565b6000602082840312156117a9576117a861175d565b5b60006117b78482850161177e565b91505092915050565b60006117cb826116c9565b9050919050565b6117db816117c0565b82525050565b60006020820190506117f660008301846117d2565b92915050565b6000819050919050565b61180f816117fc565b811461181a57600080fd5b50565b60008135905061182c81611806565b92915050565b6000602082840312156118485761184761175d565b5b60006118568482850161181d565b91505092915050565b600061186a826116c9565b9050919050565b61187a8161185f565b82525050565b60006020820190506118956000830184611871565b92915050565b6118a4816117fc565b82525050565b60006020820190506118bf600083018461189b565b92915050565b60006118d0826116c9565b9050919050565b6118e0816118c5565b82525050565b60006020820190506118fb60008301846118d7565b92915050565b600061190c826116c9565b9050919050565b61191c81611901565b82525050565b60006020820190506119376000830184611913565b92915050565b60008151905061194c81611806565b92915050565b6000602082840312156119685761196761175d565b5b60006119768482850161193d565b91505092915050565b60006040820190506119946000830185611673565b6119a1602083018461189b565b9392505050565b60008115159050919050565b6119bd816119a8565b81146119c857600080fd5b50565b6000815190506119da816119b4565b92915050565b6000602082840312156119f6576119f561175d565b5b6000611a04848285016119cb565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611aa5826117fc565b9150611ab0836117fc565b9250828201905080821115611ac857611ac7611a6b565b5b92915050565b6000819050919050565b6000611af3611aee611ae984611ace565b61169d565b6117fc565b9050919050565b611b0381611ad8565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611b3e81611661565b82525050565b6000611b508383611b35565b60208301905092915050565b6000602082019050919050565b6000611b7482611b09565b611b7e8185611b14565b9350611b8983611b25565b8060005b83811015611bba578151611ba18882611b44565b9750611bac83611b5c565b925050600181019050611b8d565b5085935050505092915050565b6000608082019050611bdc6000830187611afa565b8181036020830152611bee8186611b69565b9050611bfd6040830185611673565b611c0a606083018461189b565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b611c3282611c18565b810181811067ffffffffffffffff82111715611c5157611c50611a0d565b5b80604052505050565b6000611c64611753565b9050611c708282611c29565b919050565b600067ffffffffffffffff821115611c9057611c8f611a0d565b5b602082029050602081019050919050565b600080fd5b6000611cb9611cb484611c75565b611c5a565b90508083825260208201905060208402830185811115611cdc57611cdb611ca1565b5b835b81811015611d055780611cf1888261193d565b845260208401935050602081019050611cde565b5050509392505050565b600082601f830112611d2457611d23611c13565b5b8151611d34848260208601611ca6565b91505092915050565b600060208284031215611d5357611d5261175d565b5b600082015167ffffffffffffffff811115611d7157611d70611762565b5b611d7d84828501611d0f565b91505092915050565b6000611d91826117fc565b9150611d9c836117fc565b9250828203905081811115611db457611db3611a6b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000611df4826117fc565b9150611dff836117fc565b925082611e0f57611e0e611dba565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b611e4f816117fc565b82525050565b611e5e816119a8565b82525050565b608082016000820151611e7a6000850182611e46565b506020820151611e8d6020850182611b35565b506040820151611ea06040850182611b35565b506060820151611eb36060850182611e55565b50505050565b6000611ec58383611e64565b60808301905092915050565b6000602082019050919050565b6000611ee982611e1a565b611ef38185611e25565b9350611efe83611e36565b8060005b83811015611f2f578151611f168882611eb9565b9750611f2183611ed1565b925050600181019050611f02565b5085935050505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b611f6181611f3c565b82525050565b6000611f82611f7d611f7884611ace565b61169d565b611f3c565b9050919050565b611f9281611f67565b82525050565b60006060820190508181036000830152611fb28186611ede565b9050611fc16020830185611f58565b611fce6040830184611f89565b949350505050565b611fdf81611f3c565b8114611fea57600080fd5b50565b600081519050611ffc81611fd6565b92915050565b6000602082840312156120185761201761175d565b5b600061202684828501611fed565b91505092915050565b600061203a826117fc565b9150612045836117fc565b9250828202612053816117fc565b9150828204841483151761206a57612069611a6b565b5b5092915050565b600061207c82611f3c565b915061208783611f3c565b925082820261209581611f3c565b91508082146120a7576120a6611a6b565b5b5092915050565b60006120c96120c46120bf84611f3c565b61169d565b6117fc565b9050919050565b6120d9816120ae565b82525050565b60006040820190506120f46000830185611673565b61210160208301846120d0565b9392505050565b600060ff82169050919050565b61211e81612108565b82525050565b60008160020b9050919050565b61213a81612124565b82525050565b600061016082019050612156600083018e612115565b612163602083018d611673565b612170604083018c611673565b61217d606083018b61189b565b61218a608083018a612131565b61219760a0830189612131565b6121a460c0830188611f58565b6121b160e0830187611f58565b6121bf610100830186611f58565b6121cd610120830185612115565b6121db610140830184611673565b9c9b505050505050505050505050565b600061ffff82169050919050565b612202816121eb565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612242578082015181840152602081019050612227565b60008484015250505050565b600061225982612208565b6122638185612213565b9350612273818560208601612224565b61227c81611c18565b840191505092915050565b600060408201905061229c60008301856121f9565b81810360208301526122ae818461224e565b90509392505050565b600080fd5b600067ffffffffffffffff8211156122d7576122d6611a0d565b5b6122e082611c18565b9050602081019050919050565b60006123006122fb846122bc565b611c5a565b90508281526020810184848401111561231c5761231b6122b7565b5b612327848285612224565b509392505050565b600082601f83011261234457612343611c13565b5b81516123548482602086016122ed565b91505092915050565b6000602082840312156123735761237261175d565b5b600082015167ffffffffffffffff81111561239157612390611762565b5b61239d8482850161232f565b9150509291505056fea26469706673582212208ac1c4c6a34d9772f68506afadad2087e24840d6c05ba0383b7be47e77daf68164736f6c63430008110033";

type HoneyManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HoneyManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HoneyManager__factory extends ContractFactory {
  constructor(...args: HoneyManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _honey: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _lpConduit: PromiseOrValue<string>,
    _wbera: PromiseOrValue<string>,
    _BexMultiSwap: PromiseOrValue<string>,
    _CrocSwapDex: PromiseOrValue<string>,
    _stakingVault: PromiseOrValue<string>,
    _bgt: PromiseOrValue<string>,
    _HenloRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HoneyManager> {
    return super.deploy(
      _honey,
      _usdc,
      _lpConduit,
      _wbera,
      _BexMultiSwap,
      _CrocSwapDex,
      _stakingVault,
      _bgt,
      _HenloRouter,
      overrides || {}
    ) as Promise<HoneyManager>;
  }
  override getDeployTransaction(
    _honey: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _lpConduit: PromiseOrValue<string>,
    _wbera: PromiseOrValue<string>,
    _BexMultiSwap: PromiseOrValue<string>,
    _CrocSwapDex: PromiseOrValue<string>,
    _stakingVault: PromiseOrValue<string>,
    _bgt: PromiseOrValue<string>,
    _HenloRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _honey,
      _usdc,
      _lpConduit,
      _wbera,
      _BexMultiSwap,
      _CrocSwapDex,
      _stakingVault,
      _bgt,
      _HenloRouter,
      overrides || {}
    );
  }
  override attach(address: string): HoneyManager {
    return super.attach(address) as HoneyManager;
  }
  override connect(signer: Signer): HoneyManager__factory {
    return super.connect(signer) as HoneyManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HoneyManagerInterface {
    return new utils.Interface(_abi) as HoneyManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HoneyManager {
    return new Contract(address, _abi, signerOrProvider) as HoneyManager;
  }
}
