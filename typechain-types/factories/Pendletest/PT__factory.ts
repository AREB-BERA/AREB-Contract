/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { PT, PTInterface } from "../../Pendletest/PT";

const _abi = [
  {
    inputs: [],
    name: "PTsupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "a",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052600160005534801561001557600080fd5b5060e0806100246000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c80630dbe671f146037578063a76486b1146051575b600080fd5b603d606b565b604051604891906091565b60405180910390f35b60576071565b604051606291906091565b60405180910390f35b60005481565b60008054905090565b6000819050919050565b608b81607a565b82525050565b600060208201905060a460008301846084565b9291505056fea26469706673582212206a246d9f11b292c268eb05283603b5e16bc80843f4a3cf467d42da72c618e83464736f6c63430008110033";

type PTConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PTConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PT__factory extends ContractFactory {
  constructor(...args: PTConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PT> {
    return super.deploy(overrides || {}) as Promise<PT>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PT {
    return super.attach(address) as PT;
  }
  override connect(signer: Signer): PT__factory {
    return super.connect(signer) as PT__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PTInterface {
    return new utils.Interface(_abi) as PTInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): PT {
    return new Contract(address, _abi, signerOrProvider) as PT;
  }
}
