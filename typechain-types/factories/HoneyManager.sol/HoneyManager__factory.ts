/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  HoneyManager,
  HoneyManagerInterface,
} from "../../HoneyManager.sol/HoneyManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_honey",
        type: "address",
      },
      {
        internalType: "address",
        name: "_usdc",
        type: "address",
      },
      {
        internalType: "address",
        name: "_lpConduit",
        type: "address",
      },
      {
        internalType: "address",
        name: "_wbera",
        type: "address",
      },
      {
        internalType: "address",
        name: "_BexMultiSwap",
        type: "address",
      },
      {
        internalType: "address",
        name: "_CrocSwapDex",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stakingVault",
        type: "address",
      },
      {
        internalType: "address",
        name: "_bgt",
        type: "address",
      },
      {
        internalType: "address",
        name: "_HenloRouter",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AREB",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ArebContract",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BGT",
    outputs: [
      {
        internalType: "contract IBGT",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "BexMultiSwap",
    outputs: [
      {
        internalType: "contract IBeraCrocMultiSwap",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CrocSwapDex",
    outputs: [
      {
        internalType: "contract ICrocSwapDex",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "HenloDexRouter",
    outputs: [
      {
        internalType: "contract IHenloDexRouterV1",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Honey",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "Honey_USDC_BEX_LP",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "StakingVault",
    outputs: [
      {
        internalType: "contract IStakingVault",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBERA",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "addLiquidityAndStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amountToBurn",
        type: "uint256",
      },
    ],
    name: "burnAreb",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimBGT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "claimBgtAndBuyBack",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bgtYieldFromVault",
        type: "uint256",
      },
    ],
    name: "convertBGT2Bera",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_areb",
        type: "address",
      },
    ],
    name: "defineAreb",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "flag",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "bgtYieldFromVault",
        type: "uint256",
      },
    ],
    name: "swapBeraForAreb",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60806040526064600c553480156200001657600080fd5b5060405162002cd938038062002cd983398181016040528101906200003c91906200033e565b886000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555087600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555085600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555082600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555033600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050505050506200041d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200030682620002d9565b9050919050565b6200031881620002f9565b81146200032457600080fd5b50565b60008151905062000338816200030d565b92915050565b60008060008060008060008060006101208a8c031215620003645762000363620002d4565b5b6000620003748c828d0162000327565b9950506020620003878c828d0162000327565b98505060406200039a8c828d0162000327565b9750506060620003ad8c828d0162000327565b9650506080620003c08c828d0162000327565b95505060a0620003d38c828d0162000327565b94505060c0620003e68c828d0162000327565b93505060e0620003f98c828d0162000327565b9250506101006200040d8c828d0162000327565b9150509295985092959850929598565b6128ac806200042d6000396000f3fe6080604052600436106101235760003560e01c806362c815a4116100a0578063969d3a3d11610064578063969d3a3d14610386578063a0417bad146103b1578063b4aedbc0146103dc578063b787ed6214610407578063c056ff76146104305761012a565b806362c815a4146102af578063890eba68146102da57806389a30271146103055780638da5cb5b14610330578063905d90751461035b5761012a565b80632b9a9833116100e75780632b9a9833146101de57806333a1e86714610207578063382cf229146102325780634d4ea4781461025b5780634f40d1ed146102865761012a565b80630adcc12a1461012f5780630f5ce2231461015a57806312842bb014610185578063247cca351461019c57806329cb99ba146101b35761012a565b3661012a57005b600080fd5b34801561013b57600080fd5b5061014461045b565b6040516101519190611b52565b60405180910390f35b34801561016657600080fd5b5061016f610481565b60405161017c9190611bcc565b60405180910390f35b34801561019157600080fd5b5061019a6104a7565b005b3480156101a857600080fd5b506101b161050b565b005b3480156101bf57600080fd5b506101c8610a88565b6040516101d59190611c08565b60405180910390f35b3480156101ea57600080fd5b5061020560048036038101906102009190611c63565b610aae565b005b34801561021357600080fd5b5061021c610bcf565b6040516102299190611cb1565b60405180910390f35b34801561023e57600080fd5b5061025960048036038101906102549190611d02565b610bf5565b005b34801561026757600080fd5b50610270610f4c565b60405161027d9190611d50565b60405180910390f35b34801561029257600080fd5b506102ad60048036038101906102a89190611d02565b610f70565b005b3480156102bb57600080fd5b506102c4611015565b6040516102d19190611d7a565b60405180910390f35b3480156102e657600080fd5b506102ef6110bf565b6040516102fc9190611d7a565b60405180910390f35b34801561031157600080fd5b5061031a6110c5565b6040516103279190611d50565b60405180910390f35b34801561033c57600080fd5b506103456110eb565b6040516103529190611b52565b60405180910390f35b34801561036757600080fd5b50610370611111565b60405161037d9190611db6565b60405180910390f35b34801561039257600080fd5b5061039b611137565b6040516103a89190611d50565b60405180910390f35b3480156103bd57600080fd5b506103c661115d565b6040516103d39190611d50565b60405180910390f35b3480156103e857600080fd5b506103f1611183565b6040516103fe9190611df2565b60405180910390f35b34801561041357600080fd5b5061042e60048036038101906104299190611d02565b6111a9565b005b34801561043c57600080fd5b5061044561123b565b6040516104529190611d50565b60405180910390f35b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461050157600080fd5b610509611261565b565b600b60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461056557600080fd5b6000600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c00007b0306040518263ffffffff1660e01b81526004016105c29190611b52565b6020604051808303816000875af11580156105e1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106059190611e22565b9050600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e9a695030836040518363ffffffff1660e01b8152600401610664929190611e4f565b600060405180830381600087803b15801561067e57600080fd5b505af1158015610692573d6000803e3d6000fd5b50505050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610715929190611e4f565b6020604051808303816000875af1158015610734573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107589190611eb0565b506000600367ffffffffffffffff81111561077657610775611edd565b5b6040519080825280602002602001820160405280156107a45781602001602082028036833780820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816000815181106107de576107dd611f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff168160018151811061084d5761084c611f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16816002815181106108be576108bd611f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab584600085306102584261094b9190611f6a565b6040518663ffffffff1660e01b815260040161096a9493929190612097565b60006040518083038185885af1158015610988573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f820116820180604052508101906109b2919061220d565b9050600081600183516109c59190612256565b815181106109d6576109d5611f0c565b5b60200260200101519050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6001836040518363ffffffff1660e01b8152600401610a3e929190611e4f565b6020604051808303816000875af1158015610a5d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a819190611eb0565b5050505050565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610b0857600080fd5b80600b60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401610c74929190611e4f565b6020604051808303816000875af1158015610c93573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cb79190611eb0565b506000600367ffffffffffffffff811115610cd557610cd4611edd565b5b604051908082528060200260200182016040528015610d035781602001602082028036833780820191505090505b509050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600081518110610d3d57610d3c611f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600181518110610dac57610dab611f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681600281518110610e1d57610e1c611f0c565b5b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250506000600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16637ff36ab5846000853061025842610eaa9190611f6a565b6040518663ffffffff1660e01b8152600401610ec99493929190612097565b60006040518083038185885af1158015610ee7573d6000803e3d6000fd5b50505050506040513d6000823e3d601f19601f82011682018060405250810190610f11919061220d565b905060008160018351610f249190612256565b81518110610f3557610f34611f0c565b5b6020026020010151905080600c8190555050505050565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6001836040518363ffffffff1660e01b8152600401610fce929190611e4f565b6020604051808303816000875af1158015610fed573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110119190611eb0565b5050565b600080600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c00007b0306040518263ffffffff1660e01b81526004016110739190611b52565b6020604051808303816000875af1158015611092573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110b69190611e22565b90508091505090565b600c5481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16631e9a695030836040518363ffffffff1660e01b8152600401611206929190611e4f565b600060405180830381600087803b15801561122057600080fd5b505af1158015611234573d6000803e3d6000fd5b5050505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006040518060800160405280618ca0815260200160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001151581525090506000600167ffffffffffffffff81111561131657611315611edd565b5b60405190808252806020026020018201604052801561134f57816020015b61133c611abb565b8152602001906001900390816113345790505b509050818160008151811061136757611366611f0c565b5b602002602001018190525060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016113ce9190611b52565b602060405180830381865afa1580156113eb573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061140f9190611e22565b9050600060028261142091906122b9565b9050600081905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16846040518363ffffffff1660e01b81526004016114a4929190611e4f565b6020604051808303816000875af11580156114c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114e79190611eb0565b506000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16630b2f6f3f868460006040518463ffffffff1660e01b815260040161154a93929190612468565b6020604051808303816000875af1158015611569573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061158d91906124d2565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002866115fb91906124ff565b6040518363ffffffff1660e01b8152600401611618929190611e4f565b6020604051808303816000875af1158015611637573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061165b9190611eb0565b50600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166002846116ca9190612541565b6040518363ffffffff1660e01b81526004016116e79291906125af565b6020604051808303816000875af1158015611706573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061172a9190611eb0565b506117348161192d565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016117919190611b52565b602060405180830381865afa1580156117ae573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117d29190611e22565b9050600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b3600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401611853929190611e4f565b6020604051808303816000875af1158015611872573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906118969190611eb0565b50600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a694fc3a826040518263ffffffff1660e01b81526004016118f29190611d7a565b600060405180830381600087803b15801561190c57600080fd5b505af1158015611920573d6000803e3d6000fd5b5050505050505050505050565b60006020905060008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000618ca0905060008060008790506000806fffffffffffffffffffffffffffffffff9050600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008b8b8b8b8b8b8b8b8b8b8b6040516020016119f49b9a99989796959493929190612610565b6040516020818303038152906040529050600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a15112f96080836040518363ffffffff1660e01b8152600401611a63929190612757565b6000604051808303816000875af1158015611a82573d6000803e3d6000fd5b505050506040513d6000823e3d601f19601f82011682018060405250810190611aab919061282d565b5050505050505050505050505050565b604051806080016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000151581525090565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611b3c82611b11565b9050919050565b611b4c81611b31565b82525050565b6000602082019050611b676000830184611b43565b92915050565b6000819050919050565b6000611b92611b8d611b8884611b11565b611b6d565b611b11565b9050919050565b6000611ba482611b77565b9050919050565b6000611bb682611b99565b9050919050565b611bc681611bab565b82525050565b6000602082019050611be16000830184611bbd565b92915050565b6000611bf282611b99565b9050919050565b611c0281611be7565b82525050565b6000602082019050611c1d6000830184611bf9565b92915050565b6000604051905090565b600080fd5b600080fd5b611c4081611b31565b8114611c4b57600080fd5b50565b600081359050611c5d81611c37565b92915050565b600060208284031215611c7957611c78611c2d565b5b6000611c8784828501611c4e565b91505092915050565b6000611c9b82611b99565b9050919050565b611cab81611c90565b82525050565b6000602082019050611cc66000830184611ca2565b92915050565b6000819050919050565b611cdf81611ccc565b8114611cea57600080fd5b50565b600081359050611cfc81611cd6565b92915050565b600060208284031215611d1857611d17611c2d565b5b6000611d2684828501611ced565b91505092915050565b6000611d3a82611b99565b9050919050565b611d4a81611d2f565b82525050565b6000602082019050611d656000830184611d41565b92915050565b611d7481611ccc565b82525050565b6000602082019050611d8f6000830184611d6b565b92915050565b6000611da082611b99565b9050919050565b611db081611d95565b82525050565b6000602082019050611dcb6000830184611da7565b92915050565b6000611ddc82611b99565b9050919050565b611dec81611dd1565b82525050565b6000602082019050611e076000830184611de3565b92915050565b600081519050611e1c81611cd6565b92915050565b600060208284031215611e3857611e37611c2d565b5b6000611e4684828501611e0d565b91505092915050565b6000604082019050611e646000830185611b43565b611e716020830184611d6b565b9392505050565b60008115159050919050565b611e8d81611e78565b8114611e9857600080fd5b50565b600081519050611eaa81611e84565b92915050565b600060208284031215611ec657611ec5611c2d565b5b6000611ed484828501611e9b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000611f7582611ccc565b9150611f8083611ccc565b9250828201905080821115611f9857611f97611f3b565b5b92915050565b6000819050919050565b6000611fc3611fbe611fb984611f9e565b611b6d565b611ccc565b9050919050565b611fd381611fa8565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61200e81611b31565b82525050565b60006120208383612005565b60208301905092915050565b6000602082019050919050565b600061204482611fd9565b61204e8185611fe4565b935061205983611ff5565b8060005b8381101561208a5781516120718882612014565b975061207c8361202c565b92505060018101905061205d565b5085935050505092915050565b60006080820190506120ac6000830187611fca565b81810360208301526120be8186612039565b90506120cd6040830185611b43565b6120da6060830184611d6b565b95945050505050565b600080fd5b6000601f19601f8301169050919050565b612102826120e8565b810181811067ffffffffffffffff8211171561212157612120611edd565b5b80604052505050565b6000612134611c23565b905061214082826120f9565b919050565b600067ffffffffffffffff8211156121605761215f611edd565b5b602082029050602081019050919050565b600080fd5b600061218961218484612145565b61212a565b905080838252602082019050602084028301858111156121ac576121ab612171565b5b835b818110156121d557806121c18882611e0d565b8452602084019350506020810190506121ae565b5050509392505050565b600082601f8301126121f4576121f36120e3565b5b8151612204848260208601612176565b91505092915050565b60006020828403121561222357612222611c2d565b5b600082015167ffffffffffffffff81111561224157612240611c32565b5b61224d848285016121df565b91505092915050565b600061226182611ccc565b915061226c83611ccc565b925082820390508181111561228457612283611f3b565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006122c482611ccc565b91506122cf83611ccc565b9250826122df576122de61228a565b5b828204905092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61231f81611ccc565b82525050565b61232e81611e78565b82525050565b60808201600082015161234a6000850182612316565b50602082015161235d6020850182612005565b5060408201516123706040850182612005565b5060608201516123836060850182612325565b50505050565b60006123958383612334565b60808301905092915050565b6000602082019050919050565b60006123b9826122ea565b6123c381856122f5565b93506123ce83612306565b8060005b838110156123ff5781516123e68882612389565b97506123f1836123a1565b9250506001810190506123d2565b5085935050505092915050565b60006fffffffffffffffffffffffffffffffff82169050919050565b6124318161240c565b82525050565b600061245261244d61244884611f9e565b611b6d565b61240c565b9050919050565b61246281612437565b82525050565b6000606082019050818103600083015261248281866123ae565b90506124916020830185612428565b61249e6040830184612459565b949350505050565b6124af8161240c565b81146124ba57600080fd5b50565b6000815190506124cc816124a6565b92915050565b6000602082840312156124e8576124e7611c2d565b5b60006124f6848285016124bd565b91505092915050565b600061250a82611ccc565b915061251583611ccc565b925082820261252381611ccc565b9150828204841483151761253a57612539611f3b565b5b5092915050565b600061254c8261240c565b91506125578361240c565b92508282026125658161240c565b915080821461257757612576611f3b565b5b5092915050565b600061259961259461258f8461240c565b611b6d565b611ccc565b9050919050565b6125a98161257e565b82525050565b60006040820190506125c46000830185611b43565b6125d160208301846125a0565b9392505050565b600060ff82169050919050565b6125ee816125d8565b82525050565b60008160020b9050919050565b61260a816125f4565b82525050565b600061016082019050612626600083018e6125e5565b612633602083018d611b43565b612640604083018c611b43565b61264d606083018b611d6b565b61265a608083018a612601565b61266760a0830189612601565b61267460c0830188612428565b61268160e0830187612428565b61268f610100830186612428565b61269d6101208301856125e5565b6126ab610140830184611b43565b9c9b505050505050505050505050565b600061ffff82169050919050565b6126d2816126bb565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b838110156127125780820151818401526020810190506126f7565b60008484015250505050565b6000612729826126d8565b61273381856126e3565b93506127438185602086016126f4565b61274c816120e8565b840191505092915050565b600060408201905061276c60008301856126c9565b818103602083015261277e818461271e565b90509392505050565b600080fd5b600067ffffffffffffffff8211156127a7576127a6611edd565b5b6127b0826120e8565b9050602081019050919050565b60006127d06127cb8461278c565b61212a565b9050828152602081018484840111156127ec576127eb612787565b5b6127f78482856126f4565b509392505050565b600082601f830112612814576128136120e3565b5b81516128248482602086016127bd565b91505092915050565b60006020828403121561284357612842611c2d565b5b600082015167ffffffffffffffff81111561286157612860611c32565b5b61286d848285016127ff565b9150509291505056fea2646970667358221220374935306cc73c8a4b77587bc56d01caf6168e71d90921432fefee6727b623ea64736f6c63430008110033";

type HoneyManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: HoneyManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class HoneyManager__factory extends ContractFactory {
  constructor(...args: HoneyManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _honey: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _lpConduit: PromiseOrValue<string>,
    _wbera: PromiseOrValue<string>,
    _BexMultiSwap: PromiseOrValue<string>,
    _CrocSwapDex: PromiseOrValue<string>,
    _stakingVault: PromiseOrValue<string>,
    _bgt: PromiseOrValue<string>,
    _HenloRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<HoneyManager> {
    return super.deploy(
      _honey,
      _usdc,
      _lpConduit,
      _wbera,
      _BexMultiSwap,
      _CrocSwapDex,
      _stakingVault,
      _bgt,
      _HenloRouter,
      overrides || {}
    ) as Promise<HoneyManager>;
  }
  override getDeployTransaction(
    _honey: PromiseOrValue<string>,
    _usdc: PromiseOrValue<string>,
    _lpConduit: PromiseOrValue<string>,
    _wbera: PromiseOrValue<string>,
    _BexMultiSwap: PromiseOrValue<string>,
    _CrocSwapDex: PromiseOrValue<string>,
    _stakingVault: PromiseOrValue<string>,
    _bgt: PromiseOrValue<string>,
    _HenloRouter: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _honey,
      _usdc,
      _lpConduit,
      _wbera,
      _BexMultiSwap,
      _CrocSwapDex,
      _stakingVault,
      _bgt,
      _HenloRouter,
      overrides || {}
    );
  }
  override attach(address: string): HoneyManager {
    return super.attach(address) as HoneyManager;
  }
  override connect(signer: Signer): HoneyManager__factory {
    return super.connect(signer) as HoneyManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): HoneyManagerInterface {
    return new utils.Interface(_abi) as HoneyManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HoneyManager {
    return new Contract(address, _abi, signerOrProvider) as HoneyManager;
  }
}
